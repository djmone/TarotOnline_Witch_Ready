services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine

  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    command: bash -lc "python manage.py migrate && python manage.py collectstatic --noinput && daphne -b 0.0.0.0 -p 8000 tarotonline.asgi:application"
    env_file: .env
    volumes:
      - .:/app
      - media:/app/media
      - staticfiles:/app/staticfiles
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:alpine
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - staticfiles:/var/www/staticfiles:ro
      - media:/var/www/media:ro
    ports:
      - "8080:80"
    depends_on:
      - web

volumes:
  pgdata:
  media:
  staticfiles:
